<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[2019HGAMEWP]]></title>
    <url>%2F2019%2F02%2F16%2FHGAMEWP%2F</url>
    <content type="text"><![CDATA[CryptoMix首先拿到的是一串摩斯电码：–…/….-/….-/-…/–…/…–/…../..-./-…./-../-…./..-./–…/—-./….-/….-/–…/.—-/-…./-…/–…/-…/-…./..—/…../.—-/-…./-…./…–/….-/…–/—–/-…./…../–…/-.. ，首先在线解密得到一串意味不明的东西：744B735F6D6F7944716B7B6251663430657D，于是试一下16进制转为text，于是居然得到：tKs_moyDqk{bQf40e}，很显然现在应该凯撒移位，但是不管怎么移，都得不到hgame{这个字段，于是看到题目名字为Mix，想到应该还有其它加密方式，前面发现移位可以得到：hYg_acmRey{pEt40s}，于是想到栅栏密码，在线解密，尝试得在每组字数为9时，得到flag：hgame{E4sY_cRypt0}。 Vigener~这道题只给了一串密文：Zbi Namyrwjk wmhzk cw s eknlgv uz ifuxstlata edhnufwlow xwpz vc mkohk s kklmwk uz mflklagnkh Gswyuv uavbijk, huwwv uh xzw ryxlwxm sx s qycogxx. Ml ay u jgjs ij hgrsedhnufwlow wmtynmlmzcsf. Lny gahnyv ak kuwq lu orvwxmxsfj urv asjpwekhx, tmz cx jwycwlwj upd szniehzm xg txyec az zsj lnliw ukhxmjoyw, ozowl wsxhiv az nlw vkmgjavnmgf ry gzalzvw atxiuzozjjshfi. Ests twgvfi zsby xjakx xg asjpwekhx wfilchloir kunyqwk zbel sxy ikkkhxasrfc Namyrwjk wmhzklw. Af kckzlkyr kadnc lzxyi, Xjoyhjaib Oskomoa ogm xzw lcvkl zi tmtrcwz s myrwjgf qwlnih gx jygahnyvafm Pmywtyvw uojlwjy. Nlw Noaifwxy gahnyv osy ivayohedde xikuxcfwv hs Kagbur Tsznmklg Viddgms af ncw gfk nlgmyurv xopi zmtxvwv ghh xalnc-gfk vsgc Ru gaxxu hwd. Yck. Yaupef Tgnxakzu Fwdruwg, tan xzw ywlwek qek dgnij eomellxcfmlkx xg Trumkw jy Zaykhijw oh xzw tcrwln wiflalc sfj ms suwomjwj cxk hxywwfz heew. lfey ay ajqmenycpglmqqjzndhrqwpvhtaniz 居然没给密钥，不过山人自有妙计，使用在线解密站点：http://68.168.134.3/vigener 可以实现无密钥解密，最终所得明文结果：The Vigenere ciphe is a method of encrypting alphabetic text by using a series of interwoven Caesar ciphers, based on the letters of a keyword. It is a form of polyalphabetic substitution. The cipher is easy to understand and implement, but it resisted all attempts to break it for three centuries, which earned it the description le chiffre indechiffrable. Many people have tried to implement encryption schemes that are essentially Vigenere ciphers. In eighteen sixty three, Friedrich Kasiski was the first to publish a general method of deciphering Vigenere ciphers. The Vigenere cipher was originally described by Giovan Battista Bellaso in his one thousand five hundred and fifty-one book La cifra del. Sig. Giovan Battista Bellaso, but the scheme was later misattributed to Blaise de Vigenere in the nineth century and so acquired its present name. flag is gfyuytukxariyydfjlplwsxdbzwvqt MiscAre You Familiar with DNS Records根据题目所提，应该需要查询一系列DNS，尝试了许久，复制链接地址;http://project-a11.club/ ,通过在线网站:https://tool.lu/dns/index.html 查询txt，得到flag。 Broken Chest下载得到的是一个zip压缩包，打开提示错误，于是使用winhex打开，发现文件头被改了，改回后发现被加密了，于是看了一下发现是真的被加密了，然后使用winrar打开后居然直接给了密码，太良心了，原本以为要CRC爆破的。 Hidden Image in LSB下载压缩文件，解压发现居然有一个lsb.py文件，还有一张png图片:原以为要用到py，结果只是使用stegsolve变换通道就出来了。 Warmup首先解压下载压缩包，发现是一张打不开的1.gif图片，16进制分析下发现是MDMP文件，于是改为dmp后缀，使用mimikatz（这里直接百度下载一个就是）分析，使用命令：sekurlsa::minidump 1.dmp 效果如下:sekurlsa::logonPasswords full 发现密码:于是将密码LOSER使用SHA256加密一下得到：dd6dffcd56b77597157ac6c1beb514aa4c59d033098f806d88df89245824d3f5于是flag为：hgame{dd6dffcd56b77597157ac6c1beb514aa4c59d033098f806d88df89245824d3f5} 暗藏玄机题目给了两张图片，猜测使用stegsolve结合图片，结果不是，于是猜测为盲水印攻击，bingo！题目所给图片如下：python bwm.py decode 开学啦.png 开学了.png s.png 得到s.png，即为flag：hgame{h1de_in_THE_p1Cture}这里给出bwm.py文件：bwm.py需要注意的是使用此脚本需要先安装opencv库。 初识二维码首先解压压缩包，看到一个文件flag.txt,查看一下发现是一种加密过的照片格式，使用在线网站base64转图片或者直接复制文件粘贴到浏览器网址处回车，就会得到一张二维码，如下：很明显，需要我们补全二维码。但是这里就很坑，和常规不一样，因为还要补定时码，而且定位码还要补在外面。。。由于没有注意二维码规格，导致补了很久都没有成功，最后终于成功了。。。如下：扫描即可得到flag：hgame{Qu1ck_ReSp0nse_cODe}。 打字机解压压缩包，发现里面有flag.png和一张打字机图片，如下：开始看得我一脸懵逼，不懂为什么flag.png里面会出现打字机没有的字符，后来才知道居然是大小写的区别。看了一阵实在没办法，只得上谷歌搜图了，结果真搜出了好东西，有一篇文章专门讲了这个打字机：https://new.qq.com/omn/20180111/20180111G0TE4H.html ,没想到这居然是《紫罗兰永恒花园》里面的东西，只怪我没看几集。于是对照此文章，得到flag：hgame{My_vi0let_tyPewRiter} 无字天书这道题给的是一个流量包，wireshark看了一下，发现get了压缩包，一张图片，一个网页，那么就都导出一下，得到压缩包。解压压缩包，发现里面有password.txt和一张被加密的jpg图片，根据password.txt内容，我还以为密码需要从提取出的网页或者是图片来得到呢，毕竟它们的名字太具有欺骗性了，但是试了很久，无果。。。于是只能试一下暴力破解，只用数字居然很快就破解了出来，密码是：hgame25839421，终于得到了图片，如下：现在我们优先使用binwalk分析，果然隐藏着文件，是一个docx文档，打开但是发现什么都没有，估计是隐藏了，于是按下ctrl+a，ctrl+d，取消隐藏后看到了被隐藏起来的flag：hgame{59d28413e36019861498e823f3f41406}。 Webvery easy web从题目可以看出需要对id进行两次url编码，然后通过get请求传过去即可。 谁吃了我的flag这道题开始没有hint的时候没有头绪，因为真的没有一点信息暗示是vim编辑的，当然可以一个个地试出来到底备份文件是哪个，这个时候可以借助一些扫描工具。我们知道Vim编辑器备份文件格式.filename.swp，所以直接在所给url后面加上.index.html.swp即可。这里给出此文件（由于无法上传.index.html.swp文件，故将其改为了html） 未完待续~]]></content>
      <categories>
        <category>CTF比赛</category>
        <category>2019HGAME</category>
      </categories>
      <tags>
        <tag>CTF</tag>
        <tag>网络安全</tag>
        <tag>HGAME</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2019%2F02%2F16%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post$ hexo new "My New Post" More info: Writing Run server$ hexo server More info: Server Generate static files$ hexo generate More info: Generating Deploy to remote sites$ hexo deploy More info: Deployment这是一段测试文字 haha 一个普通标题 一个普通标题 一个普通标题 短文本 中等文本 稍微长一点的文本 稍微长一点的文本 短文本 中等文本 使用【星号】标识无序列表 使用【星号】标识无序列表 使用【星号】标识无序列表我是黑体字 这是一行引用 hello，引用结束没？AndRoid这是测试！]]></content>
  </entry>
</search>
